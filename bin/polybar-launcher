#!/usr/bin/env bash

## Launches polybar

# Terminate already running bar instances
kill_old_polybars() {
  killall -q polybar
}

# Wait until the processes have been shut down
# Ignore zombie processes
wait_old_polybars() {
  # Wait all processes found by pgrep, with a timeout
  timeout=5
  while pgrep -x polybar -r D,R,S; do
    sleep 1
    timeout=$((timeout - 1))
    if [ $timeout -eq 0 ]; then
      break
    fi
  done
}

list_connected_screens() {
  polybar --list-monitors | sed 's/:.*//'
}

launch_polybar_quiet() {
  local bar=${1}
  polybar --reload ${bar} --quiet \
    >/dev/null 2>/dev/null < /dev/null &
}

launch_polybar_debug() {
  local bar=${1}
  local stdout_file="/tmp/${USER}-polybar-stdout.log"
  local stderr_file="/tmp/${USER}-polybar-stderr.log"
  polybar --reload ${bar} \
    >${stdout_file} 2>${stderr_file} < /dev/null &
}

launch_polybar() {
  launch_polybar_quiet $@
}

bar_from_profile() {
  local profile_monitor=${1}
  case "${profile_monitor}" in
    xps14-home-3_eDP-1) echo top_light;;  # Laptop
    xps14-home-3_DP-1-1) echo top_default;; # Horizontal 32"
    xps14-home-3_DP-1-3) echo top_light;; # Vertical
    *) echo top_default;;
  esac
}

launch_all_polybars() {
  local profile=${1}
  local m
  for m in $( list_connected_screens ); do
    local profile_m=${profile}_${m}
    local bar=$( bar_from_profile ${profile_m} )
    MONITOR=$m launch_polybar ${bar}
  done
}

main() {
  local profile="${1}"

  if [ -z "${profile}" ]; then
    profile="$( autorandr --current )"
  fi

  kill_old_polybars
  wait_old_polybars &>/dev/null
  launch_all_polybars "${profile}"
}

main ${@}
