#!/usr/bin/env python3

import time
import subprocess
import argparse
import pyinotify

def get_device_by_name_and_capability(name, capability="MJPG"):
    result = subprocess.run(['v4l2-ctl', '--list-devices'], capture_output=True, text=True)
    devices = result.stdout.split('\n\n')
    for device in devices:
        lines = device.split('\n')
        if name in lines[0]:
            # Check each video device for the MJPG capability
            for line in lines[1:]:
                if '/dev/video' in line:
                    device_path = line.strip()
                    # Check if the device supports MJPG
                    format_result = subprocess.run(['v4l2-ctl', '--device=' + device_path, '--list-formats-ext'], capture_output=True, text=True)
                    if capability in format_result.stdout:
                        return device_path
    return None

class EventHandler(pyinotify.ProcessEvent):
    def __init__(self, debounce_interval):
        super().__init__()
        self.last_run = 0
        self.debounce_interval = debounce_interval

    def process_IN_OPEN(self, event):
        current_time = time.time()
        if current_time - self.last_run >= self.debounce_interval:
            print("Webcam accessed, running v4l2-ctl-manual after 1 second delay")
            time.sleep(2)
            subprocess.run(["v4l2-ctl-manual"])
            self.last_run = current_time

def main():
    parser = argparse.ArgumentParser(description="Monitor a webcam for access and run a script.")
    parser.add_argument("device_name", help="The name of the webcam to monitor.")
    args = parser.parse_args()

    DEBOUNCE_INTERVAL = 10  # in seconds

    device_path = get_device_by_name_and_capability(args.device_name)
    if not device_path:
        print(f"Device '{args.device_name}' with MJPG capability not found.")
        exit(1)

    # Initialize pyinotify
    wm = pyinotify.WatchManager()
    handler = EventHandler(DEBOUNCE_INTERVAL)
    notifier = pyinotify.Notifier(wm, handler)
    wm.add_watch(device_path, pyinotify.IN_OPEN)

    print(f"Monitoring {device_path} for access...")
    notifier.loop()

if __name__ == "__main__":
    main()
